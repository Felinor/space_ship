#pragma once
#include "movable.h"
#include "ioc.h"
#include <string>
#include "spaceship.h"

class AutoGenerated_MovableAdapter : public Movable {
public:
    AutoGenerated_MovableAdapter(IoC* ioc, const std::string& key, SpaceShip* spaceship)
        : ioc(ioc), key(key), spaceship(spaceship) {}

    Vector getPosition() const override {
        return *ioc->Resolve<Vector>(key + "::getPosition", {spaceship});
    }

    Movable& setPosition(const Vector& vector) override {
        ioc->Resolve<void>(key + "::setPosition", {spaceship, const_cast<Vector*>(&vector)});
        return *this;
    }

    Vector getVelocity() const override {
        return *ioc->Resolve<Vector>(key + "::getVelocity", {spaceship});
    }

private:
    IoC* ioc;
    std::string key;
    SpaceShip* spaceship;
};
